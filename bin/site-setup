#! /usr/bin/env bash
#
# Creates the directories and configuration for the specified site

_cws.site_setup() {
  local site_name="$1"
  local email_address="$2"
  local key_file="$3"
  local alt_names=("${@:4}")
  local alt_name
  local site_dir
  local cert_id
  local openssl_config
  local this_cmd="${BASH_SOURCE[0]##*/}"

  if [[ -z "$site_name" ]]; then
    if ! _cws.prompt_for_input 'site_name' \
      'What is the primary host name of your web site?' \
      'Site name not specified; aborting.'; then
      return 1
    fi
  fi

  if [[ -z "$email_address" ]]; then
    if ! _cws.prompt_for_input 'email_address' \
      "What is the email address you'd like to use for the certificate?" \
      'Email address not specified; aborting.'; then
      return 1
    fi
  fi

  if [[ -z "$key_file" ]]; then
    if ! _cws.prompt_for_input 'key_file' \
      "What private key file would you like to use for the certificate?" \
      'Private key not specified; aborting.'; then
      return 1
    fi
  fi

  if [[ "${#alt_names[@]}" -eq '0' ]]; then
    @go.printf '%s' 'Please enter any extra host names to include, ' \
      $'one per line (enter a blank line to stop):\n' >&2
    while read alt_name; do
      alt_name="${alt_name%$'\r'}"
      if [[ -z "$alt_name" ]]; then
        break
      fi
      alt_names+=("$alt_name")
    done
  fi

  site_dir="$CERTBOT_HOME/certs/$site_name"
  openssl_config="$site_dir/openssl.cnf"

  if [[ ! -d "$site_dir" ]]; then
    if ! mkdir -m 770 "$site_dir"; then
      return 1
    elif ! sudo chown "certbot:${GROUPS[0]}" "$site_dir"; then
      return 1
    fi
  fi

  if ! @go "$this_cmd" config-openssl "$openssl_config" \
    "$site_name" "$email_address" "${alt_names[@]}"; then
    return 1
  elif [[ ! -e "$key_file" ]] && \
    ! @go ssl-generate private-key "$key_file"; then
    return 1
  elif ! @go ssl-generate csr "$openssl_config" "$key_file"; then
    return 1
  elif ! cp "${key_file%.*}.csr" "$site_dir"; then
    return 1
  fi
}

_cws.site_setup "$@"
